const fs = require("fs");
const { MongoClient, ServerApiVersion } = require('mongodb');

require("./access.js");
const uri = database_key;
const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true, serverApi: ServerApiVersion.v1 });

async function listFilesinDB(jsonFile) {
  let fileData;
  let jsonFiles = [];
  let totalSameFiles = 0;
  try {
    await client.connect();
    const db = client.db('file_data');
    fileData = fs.readFileSync(jsonFile, 'utf8');
    jsonFiles = JSON.parse(fileData).map(file => file.fileName);
    const collections = await db.listCollections().toArray();
    const collectionNames = collections.map(collection => collection.name);
    let filenames = [];
    const countPerCollection = {};

    const sameFilesPromises = collectionNames.map(async collectionName => {
      filenames = [];
      const collection = db.collection(collectionName);
      const count = await collection.countDocuments();
      countPerCollection[collectionName] = count;

      const sameFiles = await collection.find({ fileName: { $in: jsonFiles } }).toArray();
      filenames = sameFiles.map(file => file.fileName);
      const sameFilesInCollection = filenames.length;
      return sameFilesInCollection;
    });

    const sameFilesCounts = await Promise.all(sameFilesPromises);
    totalSameFiles = sameFilesCounts.reduce((acc, count) => acc + count, 0);
    console.log("Files count per collection: ", countPerCollection);
    console.log("Total same files as in json: ", totalSameFiles);
  } catch (error) {
    console.error(error);
  } finally {
    client.close();
  }
}

listFilesinDB('D:\\output\\results.json').catch(error => console.error(error));
